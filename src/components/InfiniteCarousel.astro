---
import { Image } from "astro:assets";
const { images, sizes } = Astro.props
---

<div class="slider">
    <div class="slide-track">
        {
            images.map((image) => (
                <Image src={image.src} alt={image.alternativeText} class="slide" width={sizes.width} height={sizes.height} loading="lazy" />
            ))
        }                                                                                              
        {
            images.map((image) => (
                <Image src={image.src} alt={image.alternativeText} class="slide" width={sizes.width} height={sizes.height} loading="lazy" />
            ))
        }
    </div>
</div>

<style>
.slider {
    background: transparent;
    overflow: hidden;
    position: relative;
    width: 100%;
}

.slider::before, .slider::after {
    background: linear-gradient(to right, var(--main-yellow) 0%, rgba(255, 255, 255, 0) 100%);
    content: "";
    height: 100%;
    position: absolute;
    width: 100px;
    z-index: 2;
}

.slider::after {
    right: 0;
    top: 0;
    -webkit-transform: rotateZ(180deg);
    transform: rotateZ(180deg);
}

.slider::before {
    left: 0;
    top: 0;
}

.slider .slide-track {
    animation: scroll 15s linear infinite;
    padding: 1rem 0;
    display: flex;
    width: calc((160px * 18)); /* (imageWidth+columnGap) * DOMquantitySponsors */
    column-gap: 10px;
}

.slider .slide-track:hover {
    animation-play-state: paused;
}

.slider .slide {
    height: 100px;
    width: 150px;
    object-fit: contain;
    filter: drop-shadow(2px 2px 4px rgba(0,0,0, 0.8));
}

@keyframes scroll {
    0% {
        transform: translateX(0);
    }
    100% {
        /* (imageWidth+columnGap * quantitySponsors */
        transform: translateX(calc(-160px * 9)); 
    }
}
</style>